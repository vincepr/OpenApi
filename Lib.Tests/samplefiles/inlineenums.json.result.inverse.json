public class DateOnly
{
	[JsonPropertyName("year")]
	public int year { get; set; }
	[JsonPropertyName("month")]
	public int month { get; set; }
	[JsonPropertyName("day")]
	public int day { get; set; }
	/// <value> 0, 1, 2, 3, 4, 5, 6 </value>
	[JsonPropertyName("dayOfWeek")]
	public int dayOfWeek { get; set; }
	[JsonPropertyName("dayOfYear")]
	public int dayOfYear { get; set; }
	[JsonPropertyName("dayNumber")]
	public int dayNumber { get; set; }
}

/// <summary> A Single Element representing some data. </summary>
public class MyItem
{
	/// <summary> A required Id. </summary>
	/// <example> 12312512 </example>
	[JsonPropertyName("id")]
	public int id { get; set; }
	/// <summary> This id is nullable. </summary>
	[JsonPropertyName("someNullableId")]
	public int? someNullableId { get; set; }
}

/// <summary> The request body summary. </summary>
public class RequestBody
{
	/// <summary> Some DateTime filter. Is required. </summary>
	[JsonPropertyName("dateTime")]
	public string dateTime { get; set; }
	/// <summary> The nullable enum. </summary>
	/// <value> VALUE, NO_VALUE, MULT_IVALUE </value>
	[JsonPropertyName("indicator")]
	public string? indicator { get; set; }
}

/// <summary> The WeatherForecast element. Represents one day. </summary>
public class WeatherResponse
{
	[JsonPropertyName("date")]
	public DateOnly date { get; set; }
	/// <summary> Temperature in C. </summary>
	[JsonPropertyName("temperatureC")]
	public int temperatureC { get; set; }
	[JsonPropertyName("nullableString")]
	public string? nullableString { get; set; }
	[JsonPropertyName("notNullableString")]
	public string notNullableString { get; set; }
	[JsonPropertyName("requiredString")]
	public string requiredString { get; set; }
	[JsonPropertyName("requiredNullableString")]
	public string? requiredNullableString { get; set; }
	[JsonPropertyName("ids")]
	public IReadonlyList<string> ids { get; set; }
	[JsonPropertyName("items")]
	public IReadonlyList<MyItem> items { get; set; }
	/// <summary> A Single Element representing some data. </summary>
	[JsonPropertyName("myItem")]
	public MyItem myItem { get; set; }
	/// <value> VALUE, NO_VALUE, MULT_IVALUE </value>
	[JsonPropertyName("indicator")]
	public string indicator { get; set; }
	[JsonPropertyName("indicators")]
	public IReadonlyList<string> indicators { get; set; }
}
