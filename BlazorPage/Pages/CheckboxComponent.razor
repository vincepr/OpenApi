
@using System.Diagnostics.CodeAnalysis
@inherits InputBase<bool>

<div class="checkbox-wrapper-29">
  <label class="checkbox" for="@Id">
    <input
      id="@Id"
      type="checkbox"
      @bind="CurrentValue"
      class="checkbox__input"
    />
    <span class="checkbox__label"></span>
    @Label
  </label>
</div>

@code {
  [Parameter] public string Id { get; set; } = Guid.NewGuid().ToString();
  [Parameter] public required string Label { get; set; }

  protected override bool TryParseValueFromString(string? value, out bool result, [NotNullWhen(false)] out string? validationErrorMessage)
    => throw new NotSupportedException($"This component does not parse string inputs. Bind to the '{nameof(CurrentValue)}' property, not '{nameof(CurrentValueAsString)}'.");

}

<style>
  .checkbox-wrapper-29 {
    --size: 1rem;
    --background: #fff;
    font-size: var(--size);
  }

  .checkbox-wrapper-29 *,
  .checkbox-wrapper-29 *::after,
  .checkbox-wrapper-29 *::before {
    box-sizing: border-box;
  }

  .checkbox-wrapper-29 input[type="checkbox"] {
    visibility: hidden;
    display: none;
  }

  .checkbox-wrapper-29 .checkbox__label {
    width: var(--size);
  }

  .checkbox-wrapper-29 .checkbox__label:before {
    content: ' ';
    display: block;
    height: var(--size);
    width: var(--size);
    position: absolute;
    top: calc(var(--size) * 0.125);
    left: 0;
    background: var(--background);
  }

  .checkbox-wrapper-29 .checkbox__label:after {
    content: ' ';
    display: block;
    height: var(--size);
    width: var(--size);
    border: calc(var(--size) * .14) solid #000;
    transition: 200ms;
    position: absolute;
    top: calc(var(--size) * 0.125);
    left: 0;
    background: var(--background);
  }

  .checkbox-wrapper-29 .checkbox__label:after {
    transition: 100ms ease-in-out;
  }

  .checkbox-wrapper-29 .checkbox__input:checked ~ .checkbox__label:after {
    border-top-style: none;
    border-right-style: none;
    -ms-transform: rotate(-45deg); /* IE9 */
    transform: rotate(-45deg);
    height: calc(var(--size) * .5);
    border-color: green;
  }

  .checkbox-wrapper-29 .checkbox {
    position: relative;
    display: flex;
    cursor: pointer;
    /* Mobile Safari: */
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }

  .checkbox-wrapper-29 .checkbox__label:after:hover,
  .checkbox-wrapper-29 .checkbox__label:after:active {
    border-color: green;
  }

  .checkbox-wrapper-29 .checkbox__label {
    margin-right: calc(var(--size) * 0.45);
  }
</style>