@* @typeparam TEnum where TEnum : Enum *@
@* *@
@* <InputSelect @bind-Value="SelectedValue"> *@
@*     @foreach (var value in Enum.GetValues(typeof(TEnum))) *@
@*     { *@
@*         <option value="@value">@value</option> *@
@*     } *@
@* </InputSelect> *@
@* *@
@* @code { *@
@*     [Parameter] *@
@*     public TEnum SelectedValue { get; set; } *@
@* *@
@*     [Parameter] *@
@*     public EventCallback<TEnum> SelectedValueChanged { get; set; } *@
@* *@
@*     private async Task OnValueChanged(ChangeEventArgs e) *@
@*     { *@
@*         if (Enum.TryParse<TEnum>(e.Value?.ToString(), out var newValue)) *@
@*         { *@
@*             SelectedValue = newValue; *@
@*             await SelectedValueChanged.InvokeAsync(newValue); *@
@*         } *@
@*     } *@
@* } *@
